!function(e,t){"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e):function(e){if(!e.document)throw new Error("Sleuth requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(e){var t=function(){this._init()};t.prototype={constructor:t,_init:function(){this.headNode=document.getElementsByTagName("HEAD").item(0),this.refMapping=mappingExport(),this.numRef=0},require:function(t,o){var n,r,i=this,s=0,u=5e3;if(t instanceof Array){var a=t.length;for(n=0;a>n;n++)this._loadScript(t[n])}else"string"==typeof t?this._loadScript(t):console.error("Sleuth error:the first parameter must be array or string");o&&"function"==typeof o?"function"==typeof define&&define.amd?r=setInterval(function(){s+=100,(a==i.numRef||s==u)&&(o(),clearInterval(r))},100):e.onload=function(){o()}:o&&console.error("Sleuth error:the second parameter must be function")},_loadScript:function(e){function t(e){styleNode=document.createElement("link"),styleNode.setAttribute("type","text/css"),styleNode.setAttribute("rel","stylesheet"),styleNode.setAttribute("href",e),i.headNode.appendChild(styleNode)}var o=document.createElement("script"),n="",r="",i=this,s=e.split("|");n=s[0],r=s.length>1?s[1]:"",o.type="text/javascript",o.onload=function(){i.numRef++},o.onerror=function(){i.numRef++,console.log("Sleuth error:"+n+" load failed")},o.onreadystatechange=function(){/loaded|complete/.test(o.readyState)&&i.numRef++};var u,a=this.refMapping[n];if(this.headNode.appendChild(o),a)if(""==r)for(u in a){o.src="string"==typeof a[u]?a[u]:a[u].u,r=u;break}else a[r]?o.src=a[r]:console.error("Sleuth error:sorry,the version you wanna load is not in config file,you can pull request to our github,thx");else console.error("Sleuth error:sorry,the module you wanna load is not in config file,you can pull request to our github,thx");var l,c="string"==typeof a[r]?a[r]:a[r].c;if(c)if(c instanceof Array)for(l=c.length,u=0;l>u;u++)t(c[u]);else"string"==typeof c&&t(c)}};var o=e.Sleuth=new t;return"function"==typeof define&&define.amd&&define("sleuth",[],function(){return o}),o});